# Generated by Django 5.2.3 on 2025-07-25 16:28

import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Имя')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='masters/', verbose_name='Фотография')),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')], verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('instagram', models.CharField(blank=True, max_length=50, verbose_name='Instagram')),
                ('experience', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Стаж (лет)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Мастер',
                'verbose_name_plural': 'Мастера',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст отзыва')),
                ('client_name', models.CharField(max_length=100, verbose_name='Имя клиента')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='reviews/', verbose_name='Фотография')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 - Ужасно'), (2, '2 - Плохо'), (3, '3 - Удовлетворительно'), (4, '4 - Хорошо'), (5, '5 - Отлично')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Оценка')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликован')),
                ('ai_checked_status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved by AI'), ('rejected', 'Rejected by AI'), ('manual', 'Manual Review Required')], default='pending', max_length=20, verbose_name='AI Check Status')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='core.master', verbose_name='Мастер')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-created_at'],
                'permissions': [('can_moderate', 'Может модерировать отзывы')],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Полное название услуги для отображения клиентам', max_length=200, unique=True, verbose_name='Название услуги')),
                ('description', models.TextField(blank=True, help_text='Подробное описание услуги', verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, help_text='Цена в рублях', max_digits=7, validators=[django.core.validators.MinValueValidator(100)], verbose_name='Цена')),
                ('duration', models.PositiveIntegerField(default=30, help_text='Продолжительность в минутах (от 15 до 240)', validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(240)], verbose_name='Длительность')),
                ('category', models.CharField(choices=[('HC', 'Стрижка'), ('BD', 'Борода'), ('CX', 'Комплекс'), ('OT', 'Другое'), ('CL', 'Окрашивание'), ('HR', 'Уход за волосами')], default='HC', max_length=2, verbose_name='Категория')),
                ('is_popular', models.BooleanField(default=False, help_text='Отображать в списке популярных услуг', verbose_name='Популярная услуга')),
                ('is_active', models.BooleanField(default=True, help_text='Отображать ли услугу клиентам', verbose_name='Активна')),
                ('image', models.ImageField(blank=True, help_text='Изображение для карточки услуги (рекомендуемый размер 800x600px)', null=True, upload_to='services/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])], verbose_name='Изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
                'ordering': ['category', 'name'],
                'indexes': [models.Index(fields=['is_active', 'is_popular'], name='core_servic_is_acti_ce53f8_idx'), models.Index(fields=['category'], name='core_servic_categor_48b10a_idx'), models.Index(fields=['price'], name='core_servic_price_72c8b6_idx')],
                'constraints': [models.UniqueConstraint(fields=('name', 'category'), name='unique_service_name_per_category')],
            },
        ),
        migrations.AddField(
            model_name='master',
            name='services',
            field=models.ManyToManyField(blank=True, related_name='masters', to='core.service', verbose_name='Услуги'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100, verbose_name='Имя клиента')),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')], verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('date', models.DateField(validators=[django.core.validators.MinValueValidator(datetime.date(2025, 7, 25))], verbose_name='Дата записи')),
                ('time', models.TimeField(verbose_name='Время записи')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('confirmed', 'Подтвержденная'), ('completed', 'Выполненная'), ('cancelled', 'Отмененная')], default='new', max_length=10, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.master', verbose_name='Мастер')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('services', models.ManyToManyField(to='core.service', verbose_name='Услуги')),
            ],
            options={
                'verbose_name': 'Запись',
                'verbose_name_plural': 'Записи',
                'ordering': ['-date', '-time'],
                'indexes': [models.Index(fields=['status', 'date'], name='core_order_status_40e1bc_idx'), models.Index(fields=['master', 'date'], name='core_order_master__bd1e15_idx'), models.Index(fields=['user'], name='core_order_user_id_f84106_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='master',
            index=models.Index(fields=['name'], name='core_master_name_913940_idx'),
        ),
        migrations.AddIndex(
            model_name='master',
            index=models.Index(fields=['is_active'], name='core_master_is_acti_662e7a_idx'),
        ),
    ]
